# This controller is responsible for delivering images which are dynimcally
# created from Instancevalue data. The images are generated using RMagick (for camera images)
# or using Gnuplot (for xy plots derived from 2D data).
class DynamicImagesController < ApplicationController
# Return inline image of an Instancevalue of data type *image*.
#
# (URL-)Parameters:
# id:: database id of the Instancevalue to be displayed.
# width:: width of the generated image
# height:: height of the generated image
  def showImage
    imageblob = read_fragment("image"+Hash[params.sort].to_s)
    if (not imageblob)
      instanceValue=Instancevalue.find(params[:id])
      options=params.symbolize_keys
      options.delete(:id)
      image=instanceValue.generateImage(options)
      imageblob=image.to_blob
      write_fragment("image"+Hash[params.sort].to_s,imageblob)
    end
    send_data imageblob, :type => 'image/png',
                         :disposition => 'inline'
  end
# Return inline image (generated by Gnuplot) of an Instancevalue of
# data type *2dData*.
#
# (URL-)Parameters:
# id:: database id of the Instancevalue to be displayed.
# width:: width of the generated image
# height:: height of the generated image
  def showPlot
    imageblob = read_fragment("plot"+Hash[params.sort].to_s)
    if (not imageblob)
      instanceValue=Instancevalue.find(params[:id])
      options=params.symbolize_keys
      options.delete(:id)
      image=instanceValue.generate2dPlot(options)
      imageblob=image.to_blob
      write_fragment("plot"+Hash[params.sort].to_s,imageblob)
    end
    send_data imageblob, :type => 'image/png',
                         :disposition => 'inline'
  end
# Return inline image (generated by Gnuplot) of a set of Instancevalues 
# belonging to an Instancevalueset
#
# (URL-)Parameters:
# id:: database id of the Instancevalueset to be displayed
# parameterNames:: comma-separated list of parameter names
# width:: width of the generated image
# height:: height of the generated image
  def showMultiPlot
    instanceValueSet=Instancevalueset.find(params[:id])
    parameterNames=params[:parameterNames].split(",")
    options=params.symbolize_keys
    options.delete(:id)
    image=instanceValueSet.generateMultiPlot(parameterNames,options)
    imageblob=image.to_blob
    send_data imageblob, :type => 'image/png',
                         :disposition => 'inline'
  end
# Return inline image of a series plot.
#
# *Note:* This function is currently only a hack. It simply
# returns the file <tt>public/series.png</tt> as inline graphics.
# The image file needs to be generated first by a separate command.
#
# (URL-)Parameters:
# none
  def showSeriesPlot
    image=Magick::Image.read(Rails.root.to_s+"/public/series.png")[0]
    imageblob=image.to_blob
    send_data imageblob, :type => 'image/png',
                         :disposition => 'inline'
  end
end
